package com.park.einvoice.h5.service.impl;

import java.util.HashMap;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.park.einvoice.h5.common.DataChangeTools;
import com.park.einvoice.h5.common.HttpTools;
import com.park.einvoice.h5.common.properties.Invoiceh5;
import com.park.einvoice.h5.domain.HasInvoice;
import com.park.einvoice.h5.service.HasInvService;

@Repository(value="hasInvServiceImpl")
public class HasInvServiceImpl extends BaseService implements HasInvService {

	private Logger logger = LoggerFactory.getLogger(this.getClass());
	
	@Autowired
	private Invoiceh5 invoiceh5;
	
	private String preUrl;
	private String url4HasInv;
	
	@Override
	public HasInvoice getHasInvoice(String tradeNo) {
		try {
			//获取基本信息
			getInvoiceh5Info();
			String url = preUrl + url4HasInv;
			Map<String, String> paramMap = new HashMap<String, String>();
			paramMap.put("tradeNo", tradeNo);
			String paramJson = DataChangeTools.bean2gson(paramMap);
			logger.info("** 获取已开票页信息，请求：" + paramJson + "，url：" + url);
			//准备请求数据并发送请求
			Map<String,String> headers = getHeaders(paramJson,url);
			String result=HttpTools.HttpClientPost(url, paramJson, headers);
			//将结果解析为map
			logger.info("** 获取已开票页信息，结果：" + result);
			HasInvoice hasInvoice = DataChangeTools.gson2bean(result, HasInvoice.class);
			if(hasInvoice == null){
				return null;
			}
			String code = hasInvoice.getCode();
			//根据map中的code判断是否获取成功
			if(code.equals("200")){
				logger.info("** 获取已开票页信息成功，返回数据：" + hasInvoice);
			}else{
				logger.info("** 获取已开票页信息失败，返回数据：" + hasInvoice);
			}
			return hasInvoice;
		} catch (Exception e) {
			e.printStackTrace();
			logger.error("** 获取已开票页信息出现异常：" + e.getMessage());
			return null;
		}
	}
	
	private void getInvoiceh5Info(){
		preUrl = invoiceh5.getPreUrl();
		url4HasInv = invoiceh5.getUrl4HasInv();
	}
	
}
